{
  "compilerOptions": {
    "module": "esnext",                   /* Specify module code generation: "None", "CommonJS", "AMD", "System", "UMD", "ES6", "ES2015" or "ESNext". */
    "lib": [                              /* Specify library files to be included in the compilation:  */
      "dom",
      "es2015",
      "es2016",
      "es2017",
      "es2018"
    ],
    "target": "es2017",                   /* Specify ECMAScript target version: "ES3" (default), "ES5", "ES6"/"ES2015", "ES2016", "ES2017" or "ESNext". */
                                          /* Note: "ESNext" targets latest supported ES proposed features. */
    "allowJs": true,                      /* Allow javascript files to be compiled. */
    "checkJs": false,                     /* Report errors in .js files. */

    /* Strict Type-Checking Options */
    "strict": false,                      /* Enable all strict type checking options. */
                                          /* enables: noImplicitAny, noImplicitThis, alwaysStrict, strictBindCallApply, strictNullChecks, strictFunctionTypes, strictPropertyInitialization */
    "noImplicitAny": true,                /* Raise error on expressions and declarations with an implied 'any' type. */
    "noImplicitThis": true,               /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true,                 /* Parse in strict mode and emit "use strict" for each source file. */
    "strictBindCallApply": true,          /* Enable stricter checking of of the 'bind', 'call', and 'apply' methods on functions. */
    "strictNullChecks": false,            /* In strict null checking mode, the 'null' and 'undefined' values are not in the domain of every type and are only assignable to themselves and 'any' */
                                          /* (the one exception being that 'undefined' is also assignable to 'void'). */
    "strictFunctionTypes": true,          /* Disable bivariant parameter checking for function types. */
    "strictPropertyInitialization": false,/* Ensure non-undefined class properties are initialized in the constructor. This option requires 'strictNullChecks' be enabled in order to take effect. */

    /* Additional Checks */
    "noUnusedLocals": true,               /* Report errors on unused locals. */
    "noUnusedParameters": true,           /* Report errors on unused parameters. */
    "noImplicitReturns": true,            /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,   /* Report errors for fallthrough cases in switch statement. */

    /* Prevent errors from duplicate typings (nested dependencies) */
    "typeRoots": [
      "./node_modules/@types"
    ]
  },
  "include": [
    "typings.base.d.ts",
    "packages/**/*.ts"
  ]
}
